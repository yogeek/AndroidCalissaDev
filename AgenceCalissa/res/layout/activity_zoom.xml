<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:id="@+id/containerZoom"
    android:layout_width="match_parent"
    android:layout_height="match_parent">

    <LinearLayout android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:orientation="vertical"
        >

        <TextView style="?android:textAppearanceSmall"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="@string/message_zoom_touch_expand"
            android:padding="10dp" />

        <!-- This is an example layout containing thumbnail image buttons that, when pressed,
             zoom in to show more detail. All of the zooming and animation logic is in
             the ZoomActivity class. -->
        <!-- GridLayout
            android:id="@+id/zoomGrid"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_marginTop="16dp"
            android:alignmentMode="alignBounds"
            android:useDefaultMargins="true"
           	android:columnCount="3"-->

            <!-- Here will be dynamically added ToughHighlightImageButton as thumbnails of the photo collection of the current reference -->
            
            <!-- These buttons don't have any decorations (3D bevel, etc.), but it's still
                 important to show feedback on touch or focus. The custom
                 "ToughHighlightImageButton" ImageButton subclass helps achieve this by drawing
                 the standard system "pressed" and "focused" overlay upon user interaction. -->

           
        <!-- /GridLayout-->
        
        <GridView 
            android:id="@+id/gridView"
	        android:layout_width="fill_parent"
	        android:layout_height="wrap_content"
	        android:layout_margin="5dp"
	        android:columnWidth="100dp"
	        android:gravity="center"
	        android:numColumns="auto_fit"
	        android:verticalSpacing="5dp"
	        android:drawSelectorOnTop="true"
	        android:stretchMode="columnWidth" >
            
            
        </GridView>

    </LinearLayout>

    <!-- This initially-hidden ImageView will hold the expanded/zoomed version of the
         images above. Without transformations applied, it takes up the entire screen.
         To achieve the "zoom" animation, this view's bounds are animated from the
         bounds of the thumbnail buttons above, to its final laid-out bounds. The implementation
         of this animation is in the ZoomActivity class. -->
    <ImageView
        android:id="@+id/expanded_image"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:visibility="invisible"
        android:contentDescription="@string/description_zoom_touch_close" />

</FrameLayout>
